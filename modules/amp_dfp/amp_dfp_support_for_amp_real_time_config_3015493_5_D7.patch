diff --git a/modules/amp_dfp/amp-dfp-tag.tpl.php b/modules/amp_dfp/amp-dfp-tag.tpl.php
index 358d071..66b9c49 100644
--- a/modules/amp_dfp/amp-dfp-tag.tpl.php
+++ b/modules/amp_dfp/amp-dfp-tag.tpl.php
@@ -24,6 +24,8 @@
         width="<?php print $width; ?>"
         data-slot="<?php print $slot; ?>"
         json='<?php print $amp_ad_json; ?>'
-  >
+        <?php if (!empty($rtc_config)): ?>rtc-config='<?php print $rtc_config; ?>'
+        <?php endif ?>
+>
 </amp-ad>
 <?php if ($sticky): ?></amp-sticky-ad><?php endif; ?>
diff --git a/modules/amp_dfp/amp_dfp.module b/modules/amp_dfp/amp_dfp.module
index 56cf6f8..30cb607 100644
--- a/modules/amp_dfp/amp_dfp.module
+++ b/modules/amp_dfp/amp_dfp.module
@@ -1,4 +1,8 @@
 <?php
+
+include_once 'includes/amp_dfp_rtc/amp_dfp_rtc_config.inc';
+include_once 'includes/RealTimeConfiguration.php';
+
 /**
  * @file
  *  AMP integration for the DFP module.
@@ -31,6 +35,14 @@ function amp_dfp_theme($existing, $type, $theme, $path) {
       ),
       'template' => 'amp-dfp-tag',
     ),
+    'rtc_macro_settings' => array(
+      'render element' => 'form',
+      'file' => 'includes/amp_dfp_rtc/amp_dfp_rtc_config.inc',
+    ),
+    'rtc_url_settings' => array(
+      'render element' => 'form',
+      'file' => 'includes/amp_dfp_rtc/amp_dfp_rtc_config.inc',
+    ),
   );
 
   return $theme;
@@ -41,6 +53,7 @@ function amp_dfp_theme($existing, $type, $theme, $path) {
  *
  * @params
  *   $variables The theme variables.
+ *
  * @return
  *   The passed-in element with the js library necessary for the amp-ad
  *   element added to head.
@@ -84,13 +97,17 @@ function amp_dfp_preprocess_amp_dfp_tag(&$variables) {
   if (empty($size)) {
     // Provide a default if there is a problem, so validation does not break.
     $variables['width'] = $variables['height'] = 1;
-  } else {
+  }
+  else {
     $variables['width'] = $size['width'];
     $variables['height'] = $size['height'];
   }
 
   $tag = _dfp_prepare_adunit($variables['tag']);
-  $tag->adunit = dfp_token_replace('[dfp_tag:network_id]/' . $tag->adunit, $tag, array('sanitize' => TRUE, 'clear' => TRUE));
+  $tag->adunit = dfp_token_replace('[dfp_tag:network_id]/' . $tag->adunit, $tag, array(
+    'sanitize' => TRUE,
+    'clear' => TRUE
+  ));
 
   // We add global targeting to each dfp tag to simplify implementation.
   $global_targeting = variable_get('dfp_targeting', array());
@@ -106,12 +123,18 @@ function amp_dfp_preprocess_amp_dfp_tag(&$variables) {
   // Prepare targeting arrays for JSON formatting
   $targeting = array();
   foreach ($tag->targeting as $target) {
-    $targeting[$target['target']] = dfp_token_replace($target['value'], $tag, array('sanitize' => TRUE, 'clear' => TRUE));
+    $targeting[$target['target']] = dfp_token_replace($target['value'], $tag, array(
+      'sanitize' => TRUE,
+      'clear' => TRUE
+    ));
   }
 
   $global_targeting = array();
   foreach ($tag->global_targeting as $target) {
-    $global_targeting[$target['target']] = dfp_token_replace($target['value'], $tag, array('sanitize' => TRUE, 'clear' => TRUE));
+    $global_targeting[$target['target']] = dfp_token_replace($target['value'], $tag, array(
+      'sanitize' => TRUE,
+      'clear' => TRUE
+    ));
   }
 
   // Give preference to tag specific targeting values
@@ -119,6 +142,16 @@ function amp_dfp_preprocess_amp_dfp_tag(&$variables) {
 
   $to_json = array('targeting' => $targeting);
   $variables['amp_ad_json'] = drupal_json_encode($to_json);
+  $variables['rtc_config'] = '';
+  if (isset($tag->settings['rtc_config']) && !empty($tag->settings['rtc_config']['timeout'])) {
+    $rtc_config = new RealTimeConfiguration(
+      $tag->settings['rtc_config']['vendor'],
+      $tag->settings['rtc_config']['urls'],
+      $tag->settings['rtc_config']['timeout']
+    );
+
+    $variables['rtc_config'] = drupal_json_encode($rtc_config);
+  }
 
   _amp_dfp_headers($variables);
 }
@@ -133,7 +166,14 @@ function amp_dfp_form_ctools_export_ui_edit_item_form_alter(&$form, &$form_state
   if ($form_state['plugin']['schema'] == 'dfp_tags') {
     $tag = ($form_state['op'] == 'add' ? $form_state['item'] : $form_state['item']->raw);
 
-    $options = array('fill', 'fixed', 'fixed-height', 'flex-item', 'nodisplay', 'responsive');
+    $options = array(
+      'fill',
+      'fixed',
+      'fixed-height',
+      'flex-item',
+      'nodisplay',
+      'responsive'
+    );
     $form['tag_settings']['amp_layout'] = array(
       '#type' => 'select',
       '#title' => t('AMP Layout'),
@@ -156,6 +196,8 @@ function amp_dfp_form_ctools_export_ui_edit_item_form_alter(&$form, &$form_state
       '#weight' => 0,
       '#default_value' => isset($tag->settings['amp_sticky']) ? $tag->settings['amp_sticky'] : 0,
     );
+    // Adds rtc to the dfp ad form.
+    _amp_dfp_rtc_configuration_form($form, $form_state, $tag);
 
     $form['#validate'][] = 'amp_dfp_ctools_export_ui_edit_item_form_validate';
     array_unshift($form['#submit'], 'amp_dfp_ctools_export_ui_edit_item_form_submit');
@@ -206,6 +248,7 @@ function _amp_dfp_get_pixel_sizes($size) {
       'height' => $match[2],
     );
   }
+
   return FALSE;
 }
 
@@ -215,9 +258,11 @@ function _amp_dfp_get_pixel_sizes($size) {
 function _amp_dfp_get_amp_size($tag) {
   if (!empty($tag->settings['amp_size'])) {
     return _amp_dfp_get_pixel_sizes($tag->settings['amp_size']);
-  } else {
+  }
+  else {
     // Grab the lowest resolution from the DFP size property
     $lowest = _amp_dfp_get_lowest_resolution($tag->size);
+
     return _amp_dfp_get_pixel_sizes($lowest);
   }
 }
@@ -231,11 +276,13 @@ function _amp_dfp_get_amp_size($tag) {
  */
 function _amp_dfp_get_lowest_resolution($sizes) {
   $resolutions = explode(',', $sizes);
+
   return array_reduce($resolutions, '_amp_dfp_size_reduce_callback');
 }
 
 /**
  * Callback for the array_reduced used to determine lowest resolution.
+ *
  * @see _amp_dfp_get_lowest_resolution().
  */
 function _amp_dfp_size_reduce_callback($carry, $item) {
@@ -258,6 +305,7 @@ function _amp_dfp_size_reduce_callback($carry, $item) {
 function amp_dfp_tag($machinename) {
   $render_array = dfp_tag($machinename);
   $render_array['dfp_wrapper']['tag']['#theme'] = 'amp_dfp_tag';
+
   return $render_array;
 }
 
diff --git a/modules/amp_dfp/includes/RealTimeConfiguration.php b/modules/amp_dfp/includes/RealTimeConfiguration.php
new file mode 100644
index 0000000..239e56f
--- /dev/null
+++ b/modules/amp_dfp/includes/RealTimeConfiguration.php
@@ -0,0 +1,87 @@
+<?php
+/**
+ * @file Serializes the object to a value that can be serialized natively by json_encode().
+ */
+
+/**
+ *  Implements JsonSerializable Interface
+ */
+class RealTimeConfiguration implements JsonSerializable {
+  private $vendors;
+  private $urls;
+  private $timeout;
+
+  public function __construct($vendors, $urls, $timeout) {
+    $this->vendors = $this->formatVendor($vendors);
+    $this->urls = $this->formatUrls($urls);
+    $this->timeout = $timeout;
+  }
+
+  /**
+   * formats the vendor elements to match the expected rtc output.
+   * 
+   * @param type $vendors
+   *
+   * @return type array
+   */
+  private function formatVendor($vendors) {
+    $formatted = array();
+    for ($i = 0; $i < count($vendors); $i++) {
+      $formatted[$vendors[$i]['vendor_name']] = $this->formatMacros($vendors[$i]['macros']);
+    }
+
+    return $formatted;
+  }
+
+  /**
+   * formats the macros into the required format to be used in the vendor array.
+   * 
+   * @param type $macros
+   *
+   * @return type array
+   */
+  private function formatMacros($macros) {
+    $formatted = array();
+    for ($i = 0; $i < count($macros); $i++) {
+      $formatted[$macros[$i]['macro']] = $macros[$i]['value'];
+    }
+
+    return $formatted;
+  }
+
+  /**
+   * formats the urls elements, to match expected rtc output.
+   * 
+   * @param type $urls
+   *
+   * @return type array
+   */
+  private function formatUrls($urls) {
+    $formatted = array();
+    for ($i = 0; $i < count($urls); $i++) {
+      if (!empty($urls[$i]['rtc_error_url'])) {
+        $formatted[] = (object) [
+          'url' => $urls[$i]['rtc_url'],
+          'errorReportingUrl' => $urls[$i]['rtc_error_url'],
+        ];
+      }
+      else {
+        $formatted[] = $urls[$i]['rtc_url'];
+      }
+    }
+
+    return $formatted;
+  }
+
+  /**
+   *
+   * @return type json object
+   */
+  public function jsonSerialize() {
+    return array(
+      'vendors' => $this->vendors,
+      'urls' => $this->urls,
+      'timeoutMillis' => $this->timeout,
+    );
+  }
+}
diff --git a/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_config.inc b/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_config.inc
new file mode 100644
index 0000000..6bf749d
--- /dev/null
+++ b/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_config.inc
@@ -0,0 +1,50 @@
+<?php
+/**
+ * @file Main file for providing real time configuration functionality for amp-ad elements
+ */
+
+/**
+ * RTC form to pull in the main elements of the rtc form.
+ *
+ * @param $form
+ * @param $form_state
+ * @param $tag
+ */
+function _amp_dfp_rtc_configuration_form(&$form, &$form_state, $tag) {
+  $form['rtc_config'] = array(
+    '#type' => 'fieldset',
+    '#title' => t('Real Time Configuration'),
+    '#tree' => TRUE,
+    '#collapsible' => TRUE,
+    '#collapsed' => FALSE,
+    '#group' => 'settings',
+  );
+
+  // Vendors & Macros (amp_dfp_rtc_vendor.inc).
+  form_load_include($form_state, 'inc', 'amp_dfp', 'includes/amp_dfp_rtc/amp_dfp_rtc_vendors');
+  _amp_dfp_rtc_build_vendors($form, $form_state, $tag);
+
+  // Urls  (amp_dfp_rtc_url.inc).
+  form_load_include($form_state, 'inc', 'amp_dfp', 'includes/amp_dfp_rtc/amp_dfp_rtc_urls');
+  _amp_dfp_rtc_build_urls($form, $form_state, $tag);
+
+  // Timeout (amp_dfp_rtc_timeout.inc).
+  form_load_include($form_state, 'inc', 'amp_dfp', 'includes/amp_dfp_rtc/amp_dfp_rtc_timeout');
+  _amp_dfp_rtc_build_timeout($form, $form_state, $tag);
+
+  // So the submit handler runs before $tag->settings is saved.
+  array_unshift($form['#submit'], '_amp_dfp_rtc_config_submit');
+}
+
+/**
+ * Submit handler for the rtc elements of the form.
+ *
+ * @param $form
+ * @param $form_state
+ */
+function _amp_dfp_rtc_config_submit(&$form, &$form_state) {
+  $rtc_config['vendor'] = $form_state['input']['rtc_config']['wrapper']['vendor'];
+  $rtc_config['urls'] = $form_state['input']['rtc_config']['urls']['url_wrapper'];
+  $rtc_config['timeout'] = $form_state['input']['rtc_config']['timeout'];
+  $form_state['values']['settings']['rtc_config'] = $rtc_config;
+}
diff --git a/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_macros.inc b/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_macros.inc
new file mode 100644
index 0000000..bf67034
--- /dev/null
+++ b/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_macros.inc
@@ -0,0 +1,133 @@
+<?php
+/**
+ * @file real time configuration helper file to break out the form components, this file deals
+ * with the macro element, within the vendor section of the form
+ */
+
+/**
+ * function to build the macro section of the form.
+ *
+ * @param $form
+ * @param $form_state
+ * @param $vendor_key
+ * @param $tag
+ */
+function _amp_dfp_rtc_build_macros(&$form, &$form_state, $vendor_key, $tag) {
+  $form['rtc_config']['wrapper']['vendor'][$vendor_key]['macros'] = array(
+    '#type' => 'markup',
+    '#tree' => FALSE,
+    '#prefix' => '<div id="rtc-macro-table-' . $vendor_key . '">',
+    '#suffix' => '</div>',
+    '#theme' => 'rtc_macro_settings',
+    '#parents' => array(
+      'rtc_config',
+      'wrapper',
+      'vendor',
+      $vendor_key,
+      'macros'
+    ),
+  );
+
+  if (isset($tag->settings['rtc_config']['vendor'][$vendor_key]['macros']) && count($tag->settings['rtc_config']['vendor'][$vendor_key]['macros']) > $form_state['num_macros'][$vendor_key]) {
+    $form_state['num_macros'][$vendor_key] = count($tag->settings['rtc_config']['vendor'][$vendor_key]['macros']);
+  }
+
+  for ($j = 0; $j < $form_state['num_macros'][$vendor_key]; $j++) {
+    $form['rtc_config']['wrapper']['vendor'][$vendor_key]['macros'][$j]['macro'] = array(
+      '#type' => 'textfield',
+      '#value' => isset($tag->settings['rtc_config']['vendor'][$vendor_key]['macros'][$j]['macro']) ? $tag->settings['rtc_config']['vendor'][$vendor_key]['macros'][$j]['macro'] : '',
+      '#parents' => array(
+        'rtc_config',
+        'wrapper',
+        'vendor',
+        $vendor_key,
+        'macros',
+        $j,
+        'macro'
+      ),
+    );
+    $form['rtc_config']['wrapper']['vendor'][$vendor_key]['macros'][$j]['value'] = array(
+      '#type' => 'textfield',
+      '#value' => isset($tag->settings['rtc_config']['vendor'][$vendor_key]['macros'][$j]['value']) ? $tag->settings['rtc_config']['vendor'][$vendor_key]['macros'][$j]['value'] : '',
+      '#parents' => array(
+        'rtc_config',
+        'wrapper',
+        'vendor',
+        $vendor_key,
+        'macros',
+        $j,
+        'value'
+      ),
+    );
+  }
+
+  $form['rtc_config']['wrapper']['vendor'][$vendor_key]['more_macro'] = array(
+    '#type' => 'submit',
+    '#value' => t('Add vendor macro'),
+    '#submit' => array('_amp_dfp_rtc_macro_form_submit'),
+    '#parents' => array('rtc_config', 'wrapper', 'vendor', $vendor_key),
+    '#limit_validation_errors' => array(),
+    '#ajax' => array(
+      'callback' => '_amp_dfp_rtc_macro_form_elements_callback',
+      'wrapper' => 'rtc-macro-table-' . $vendor_key,
+      'effect' => 'fade',
+      'method' => 'replace',
+    ),
+  );
+}
+
+/**
+ * Theme function for the "macro" form.
+ *
+ * @param $variables
+ */
+function theme_rtc_macro_settings($variables) {
+  $form = $variables['form'];
+  $headers = array(t('Macro'), t('Value'));
+  $rows = array();
+  foreach (element_children($form) as $key) {
+
+    if (is_numeric($key) && !empty($form[$key]['macro'])) {
+      $rows[] = array(
+        drupal_render($form[$key]['macro']),
+        drupal_render($form[$key]['value'])
+      );
+    }
+  }
+
+  return theme('table', array('header' => $headers, 'rows' => $rows));
+}
+
+/**
+ * Submit handler for adding another macro.
+ *
+ * @param $form
+ * @param $form_state
+ */
+function _amp_dfp_rtc_macro_form_submit(&$form, &$form_state) {
+  $form_state['rtc_config'] = $form_state['input']['rtc_config'];
+  $form_state['num_macros'][$form_state['input']['vendor_key']]++;
+  $form_state['rebuild'] = TRUE;
+}
+
+/**
+ * Ajax callback for adding more macros to the vendor.
+ *
+ * @param $form
+ * @param $form_state
+ *
+ * @return next macro
+ */
+function _amp_dfp_rtc_macro_form_elements_callback(&$form, &$form_state) {
+  $form_state['rtc_config'] = $form_state['input']['rtc_config'];
+  // Load in previous macros.
+  $macros = count($form['rtc_config']['wrapper']['vendor'][$form_state['input']['vendor_key']]['macros']);
+  for ($i = 0; $i < $macros; $i++) {
+    if (isset($form_state['input']['rtc_config']['wrapper']['vendor'][$form_state['input']['vendor_key']]['macros'][$i]) && !empty($form_state['input']['rtc_config']['wrapper']['vendor'][$form_state['input']['vendor_key']]['macros'][$i]['macro'])) {
+      $form['rtc_config']['wrapper']['vendor'][$form_state['input']['vendor_key']]['macros'][$i]['macro']['#value'] = $form_state['input']['rtc_config']['wrapper']['vendor'][$form_state['input']['vendor_key']]['macros'][$i]['macro'];
+      $form['rtc_config']['wrapper']['vendor'][$form_state['input']['vendor_key']]['macros'][$i]['value']['#value'] = $form_state['input']['rtc_config']['wrapper']['vendor'][$form_state['input']['vendor_key']]['macros'][$i]['value'];
+    }
+  }
+
+  return $form['rtc_config']['wrapper']['vendor'][$form_state['input']['vendor_key']]['macros'];
+}
diff --git a/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_timeout.inc b/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_timeout.inc
new file mode 100644
index 0000000..9216811
--- /dev/null
+++ b/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_timeout.inc
@@ -0,0 +1,30 @@
+<?php
+/**
+ * @file real time configuration helper file to break out the form components, this file deals
+ * with the timeout element of the form.
+ *
+ */
+
+/**
+ * function to build the timeout section of the form.
+ *
+ * @param $form
+ * @param $form_state
+ * @param $tag
+ */
+function _amp_dfp_rtc_build_timeout(&$form, &$form_state, $tag) {
+  $form['rtc_config']['wrapper_timeout'] = array(
+    '#type' => 'fieldset',
+    '#title' => t('Timeout configuration'),
+    '#collapsible' => TRUE,
+    '#description' => t('Timeout value is in milliseconds, (60 seconds = 6000 milliseconds'),
+    '#parents' => array('rtc_config'),
+  );
+
+  $form['rtc_config']['wrapper_timeout']['timeout'] = array(
+    '#type' => 'textfield',
+    '#title' => t('Timeout'),
+    '#description' => t('RTC timeout configuration (in milliseconds).'),
+    '#value' => isset($tag->settings['rtc_config']['timeout']) ? $tag->settings['rtc_config']['timeout'] : '',
+  );
+}
diff --git a/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_urls.inc b/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_urls.inc
new file mode 100644
index 0000000..246acb2
--- /dev/null
+++ b/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_urls.inc
@@ -0,0 +1,120 @@
+<?php
+/**
+ * @file real time configuration helper file to break out the form components, this file deals
+ * with the url element of the form.
+ */
+
+/**
+ * function to build the urls section of the form.
+ *
+ * @param $form
+ * @param $form_state
+ * @param $tag
+ */
+function _amp_dfp_rtc_build_urls(&$form, &$form_state, $tag) {
+  $form['rtc_config']['urls'] = array(
+    '#type' => 'fieldset',
+    '#title' => t('Urls'),
+    '#collapsible' => TRUE,
+    '#description' => t('Url configuration, if an error reporting url is present, both fields must be populated.'),
+  );
+
+  if (empty($form_state['num_urls'])) {
+    $form_state['num_urls'] = 1;
+  }
+
+  $form['rtc_config']['urls']['url_wrapper'] = array(
+    '#type' => 'markup',
+    '#prefix' => '<div id="rtc-url-wrapper">',
+    '#sufix' => '</div>',
+    '#theme' => 'rtc_url_settings'
+  );
+
+  if (isset($tag->settings['rtc_config']['urls']) && count($tag->settings['rtc_config']['urls']) > $form_state['num_urls']) {
+    $form_state['num_urls'] = count($tag->settings['rtc_config']['urls']);
+  }
+
+  for ($k = 0; $k < $form_state['num_urls']; $k++) {
+    $form['rtc_config']['urls']['url_wrapper'][$k]['rtc_url'] = array(
+      '#type' => 'textfield',
+      '#description' => empty($tag->settings['rtc_config']['urls'][$k]['rtc_url']) ? 'must be in the format: https://www.example.com' : '',
+      '#value' => isset($tag->settings['rtc_config']['urls'][$k]['rtc_url']) ? $tag->settings['rtc_config']['urls'][$k]['rtc_url'] : '',
+    );
+
+    $form['rtc_config']['urls']['url_wrapper'][$k]['rtc_error_url'] = array(
+      '#type' => 'textfield',
+      '#value' => isset($tag->settings['rtc_config']['urls'][$k]['rtc_error_url']) ? $tag->settings['rtc_config']['urls'][$k]['rtc_error_url'] : '',
+    );
+  }
+  $form['rtc_config']['url_button'] = array(
+    '#type' => 'markup',
+    '#tree' => TRUE,
+    '#prefix' => '<div id="rtc-url-button">',
+    '#suffix' => '</div>',
+    '#parents' => array('rtc_config', 'urls'),
+  );
+  $form['rtc_config']['url_button']['more_rtc_url'] = array(
+    '#type' => 'submit',
+    '#value' => t('Add url'),
+    '#submit' => array('_amp_dfp_rtc_urls_form_submit'),
+    '#ajax' => array(
+      'callback' => '_amp_dfp_rtc_urls_form_elements_callback',
+      'wrapper' => 'rtc-url-wrapper',
+      'effect' => 'fade',
+    ),
+  );
+}
+
+/**
+ * Theme function for the "url" form.
+ * 
+ * @param type $variables
+ */
+function theme_rtc_url_settings($variables) {
+  $form = $variables['form'];
+  $headers = array(t('Url'), t('Error reporting url (optional)'));
+  $rows = array();
+
+  foreach (element_children($form) as $key) {
+    if (is_numeric($key) && !empty($form[$key]['rtc_url'])) {
+      $rows[] = array(
+        drupal_render($form[$key]['rtc_url']),
+        drupal_render($form[$key]['rtc_error_url'])
+      );
+    }
+  }
+
+  return theme('table', array('header' => $headers, 'rows' => $rows));
+}
+
+/**
+ * Ajax Submit handler to add another url.
+ * 
+ * @param type $form
+ * @param type $form_state
+ */
+function _amp_dfp_rtc_urls_form_submit(&$form, &$form_state) {
+  $form_state['rtc_config'] = $form_state['input']['rtc_config'];
+  $form_state['num_urls']++;
+  $form_state['rebuild'] = TRUE;
+}
+
+/**
+ * Ajax callback to add another url.
+ * 
+ * @param type $form
+ * @param type $form_state
+ * @return url table
+ */
+function _amp_dfp_rtc_urls_form_elements_callback(&$form, &$form_state) {
+  // Load in previous urls.
+  $urls = count($form['rtc_config']['wrapper']['vendor'][$form_state['input']['vendor_key']]['macros']);
+  for ($i = 0; $i < $urls; $i++) {
+    if (isset($form_state['input']['rtc_config']['urls']['url_wrapper'][$i]['rtc_url']) && !empty($form_state['input']['rtc_config']['urls']['url_wrapper'][$i]['rtc_url'])) {
+      $form['rtc_config']['urls']['url_wrapper'][$i]['rtc_url']['#value'] = $form_state['input']['rtc_config']['urls']['url_wrapper'][$i]['rtc_url'];
+      $form['rtc_config']['urls']['url_wrapper'][$i]['rtc_error_url']['#value'] = $form_state['input']['rtc_config']['urls']['url_wrapper'][$i]['rtc_error_url'];
+    }
+  }
+
+  return $form['rtc_config']['urls']['url_wrapper'];
+}
diff --git a/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_vendors.inc b/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_vendors.inc
new file mode 100644
index 0000000..aa69d54
--- /dev/null
+++ b/modules/amp_dfp/includes/amp_dfp_rtc/amp_dfp_rtc_vendors.inc
@@ -0,0 +1,108 @@
+<?php
+/**
+ * @file real time configuration helper file to break out the form components, this file deals
+ * with the vendor element of the form
+ */
+
+/**
+ * function to build the vendor section of the form.
+ *
+ * @param $form
+ * @param $form_state
+ * @param $tag
+ */
+function _amp_dfp_rtc_build_vendors(&$form, &$form_state, $tag) {
+  if (empty($form_state['num_vendors'])) {
+    $form_state['num_vendors'] = 1;
+  }
+  $form['rtc_config']['wrapper'] = array(
+    '#type' => 'markup',
+    '#tree' => TRUE,
+    '#prefix' => '<div id="rtc-vendor-wrapper">',
+    '#suffix' => '</div>',
+    '#parents' => array('rtc_config', 'wrapper'),
+  );
+
+  if (isset($tag->settings['rtc_config']['vendor']) && count($tag->settings['rtc_config']['vendor']) > $form_state['num_vendors']) {
+    $form_state['num_vendors'] = count($tag->settings['rtc_config']['vendor']);
+  }
+  for ($i = 0; $i < $form_state['num_vendors']; $i++) {
+
+    if (empty($form_state['num_macros'][$i])) {
+      $form_state['num_macros'][$i] = 1;
+    }
+
+    $form['rtc_config']['wrapper']['vendor'][$i] = array(
+      '#type' => 'fieldset',
+      '#title' => isset($tag->settings['rtc_config']['vendor'][$i]['vendor_name']) ? t('Vendor: ' . $tag->settings['rtc_config']['vendor'][$i]['vendor_name']) : t('Vendor'),
+      '#tree' => TRUE,
+      '#collapsible' => TRUE,
+      '#parents' => array('rtc_config', 'wrapper', 'vendor'),
+    );
+
+    $form['rtc_config']['wrapper']['vendor'][$i]['vendor_name'] = array(
+      '#type' => 'textfield',
+      '#title' => t('Vendor name'),
+      '#description' => t('Vendor name.'),
+      '#parents' => array('rtc_config', 'wrapper', 'vendor', $i, 'vendor_name'),
+      '#value' => isset($tag->settings['rtc_config']['vendor'][$i]['vendor_name']) ? $tag->settings['rtc_config']['vendor'][$i]['vendor_name'] : '',
+    );
+
+    $form['rtc_config']['wrapper']['vendor'][$i]['vendor_key'] = array(
+      '#type' => 'hidden',
+      '#value' => $i,
+      '#name' => 'vendor_key'
+    );
+
+    // Build Macros.
+    form_load_include($form_state, 'inc', 'amp_dfp', 'includes/amp_dfp_rtc/amp_dfp_rtc_macros');
+    _amp_dfp_rtc_build_macros($form, $form_state, $i, $tag);
+
+  }
+  $form['rtc_config']['button'] = array(
+    '#type' => 'markup',
+    '#tree' => TRUE,
+    '#prefix' => '<div id="rtc-vendor-button">',
+    '#suffix' => '</div>',
+    '#parents' => array('rtc_config', 'wrapper'),
+  );
+  $form['rtc_config']['button']['more_rtc_vendors'] = array(
+    '#type' => 'submit',
+    '#value' => t('Add vendor'),
+    '#submit' => array('_amp_dfp_rtc_vendor_form_submit'),
+    '#parents' => array('rtc_config'),
+    '#suffix' => '&nbsp;',
+    '#ajax' => array(
+      'callback' => '_amp_dfp_rtc_vendor_form_elements_callback',
+      'wrapper' => 'rtc-vendor-wrapper',
+      'effect' => 'fade',
+      'method' => 'append',
+    ),
+  );
+}
+
+/**
+ * Submit handler for ajax updates to the form.
+ * 
+ * @param type $form
+ * @param type $form_state
+ */
+function _amp_dfp_rtc_vendor_form_submit(&$form, &$form_state) {
+  $form_state['rtc_config'] = $form_state['values']['rtc_config'];
+  $form_state['num_vendors']++;
+
+  $form_state['rebuild'] = TRUE;
+}
+
+/**
+ * ajax callback for adding another vendor.
+ * 
+ * @param type $form
+ * @param type $form_state
+ * @return type vendor
+ */
+function _amp_dfp_rtc_vendor_form_elements_callback(&$form, &$form_state) {
+  $key = $form_state['input']['vendor_key'] + 1;
+
+  return $form['rtc_config']['wrapper']['vendor'][$key];
+}
diff --git a/modules/amp_dfp/tests/amp_dfp.test b/modules/amp_dfp/tests/amp_dfp.test
index 574dbc5..fc2a430 100644
--- a/modules/amp_dfp/tests/amp_dfp.test
+++ b/modules/amp_dfp/tests/amp_dfp.test
@@ -24,15 +24,14 @@ class AmpDFPTestCase extends DrupalWebTestCase {
 
     // Create Admin user.
     $this->admin_user = $this->drupalCreateUser(array(
+        'administer DFP',
         'administer content types',
         'administer fields',
         'administer site configuration',
-        'administer DFP',
         'administer blocks',
       )
     );
     $this->drupalLogin($this->admin_user);
-
     // @todo Install the AMP theme.
     //theme_enable(array('amptheme', 'ampsubtheme_example'));
     //variable_set('amp_theme', 'ampsubtheme_example');
@@ -64,8 +63,58 @@ class AmpDFPTestCase extends DrupalWebTestCase {
       'targeting[0][target]' => 'position',
       'targeting[0][value]' => '1',
     );
+     
+    $edit["rtc_config[wrapper][vendor][0][vendor_name]"] = 'Simple test vendor';
+    $edit["rtc_config[wrapper][vendor][0][macros][0][macro]"] = 'Simple test 1 macro';
+    $edit["rtc_config[wrapper][vendor][0][macros][0][value]"] = 'Simple test 1 macro value';
+    $edit["rtc_config[urls][url_wrapper][0][rtc_url]"] = 'Simple test url 1';
+    $edit["rtc_config[urls][url_wrapper][0][rtc_error_url]"] = 'Simple test error url 1';
+    $edit["rtc_config[timeout]"] = '9999';
+
     $this->drupalPost(NULL, $edit, t('Save'));
 
+    $this->drupalGet('admin/structure/dfp_ads/list/amp_ad/edit');
+    
+    $this->drupalPostAJAX(
+      NULL,
+      array(),
+      array('op' => t('Add vendor macro')),
+      NULL,
+      array(),
+      array(),
+      NULL,
+      NULL);
+    
+    $edit_ajax["rtc_config[wrapper][vendor][0][macros][1][macro]"] = 'Simple test 1 macro 2';
+    $edit_ajax["rtc_config[wrapper][vendor][0][macros][1][value]"] = 'Simple test 1 macro value 2';
+      
+    $this->drupalPostAJAX(
+      NULL,
+      array(),
+      array('op' => t('Add vendor')),
+      NULL,
+      array(),
+      array(),
+      NULL,
+      NULL);
+    
+    $edit_ajax["rtc_config[wrapper][vendor][1][vendor_name]"] = 'Simple test vendor 2';
+    $edit_ajax["rtc_config[wrapper][vendor][1][macros][0][macro]"] = 'Simple test 2 macro 1';
+    $edit_ajax["rtc_config[wrapper][vendor][1][macros][0][value]"] = 'Simple test 2 macro value 1';
+    
+    $this->drupalPostAJAX(
+      NULL,
+      array(),
+      array('op' => t('Add url')),
+      NULL,
+      array(),
+      array(),
+      NULL,
+      NULL);
+    
+    $edit_ajax["rtc_config[urls][url_wrapper][1][rtc_url]"] = 'Simple test url 2';
+    $this->drupalPost(NULL, $edit_ajax, t('Save'));
+    
     // Create Sticky DFP tag.
     $this->drupalGet('admin/structure/dfp_ads/add');
     $this->assertResponse(200);
@@ -105,6 +154,7 @@ class AmpDFPTestCase extends DrupalWebTestCase {
     $this->assertResponse(200);
     $this->assertPattern('|script src="https:\/\/cdn.ampproject.org\/v0\/amp-ad-0.1.js" async.*\scustom-element="amp-ad"|');
     $this->assertPattern('|amp-ad type="doubleclick"[\s].*layout="responsive"[\s].*height="250"[\s].*width="300"[\s].*data-slot="\/1\/"[\s].*json=\'{"targeting":{"position":"1"}}\'|');
+    $this->assertPattern('|amp-ad[\s][^*]*rtc-config=\'{"vendors":{"Simple test vendor":{"Simple test 1 macro":"Simple test 1 macro value","Simple test 1 macro 2":"Simple test 1 macro value 2"},"Simple test vendor 2":{"Simple test 2 macro 1":"Simple test 2 macro value 1"}},"urls":\[{"url":"Simple test url 1","errorReportingUrl":"Simple test error url 1"},"Simple test url 2"\],"timeoutMillis":"9999"}\'|');
     $this->assertPattern('|script src="https:\/\/cdn.ampproject.org\/v0\/amp-sticky-ad-1.0.js" async.*\scustom-element="amp-sticky-ad"|');
     $this->assertPattern('|amp-ad type="doubleclick"[\s].*height="50"[\s].*width="320"[\s].*data-slot="\/1\/sticky"[\s]|');
     $this->assertRaw('</amp-ad>');
